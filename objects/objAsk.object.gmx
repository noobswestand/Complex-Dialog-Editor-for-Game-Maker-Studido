<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>w=250
h=150

h2=0

miw=150
mih=75
maw=500
mah=400


hold=-1
click=0
click2=0
drag=false
X=0
Y=0
X2=0
Y2=0

select=0
text=""

range=5
for(i=0;i&lt;15;i++){
    con[i]=-1
    cone[i]=0
    cons[i]=false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resize

if scr_hover(x-3,y,x+3,y+h){
    if mouse_check_button_pressed(mb_left){
        hold=0
    }
}
if scr_hover(x-3+w,y,x+3+w,y+h)
&amp;&amp; !scr_hover(x-range+w,y+(h/2)-range,x+range+w,y+(h/2)+range){
    if mouse_check_button_pressed(mb_left){
        hold=2
    }
}

if scr_hover(x,y-3,x+w,y+3){
    if mouse_check_button_pressed(mb_left){
        hold=1
    }
}
if scr_hover(x,y-3+h,x+w,y+3+h){
    if mouse_check_button_pressed(mb_left){
        if hold=2{
            hold=4
        }else{
            hold=3
        }
    }
}

if hold!=-1 &amp;&amp; mouse_check_button_released(mb_left){
    hold=-1
}

switch(hold){
    
    //left
    case 0:
    break;
    
    //top
    case 1:
    break;
    
    //right
    case 2:
        w=mouse_x-x
    break;
    
    //bottom
    case 3:
        h=mouse_y-y
    break;
    
    //left-bottom
    case 4:
        w=mouse_x-x
        h=mouse_y-y
    break;
}



//clamp
w=clamp(w,miw,maw)
h=clamp(h,string_height_ext(text,15,w-10),mah)

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Double click

if click&gt;0{
    click--
}
if scr_hover(x,y,x+w,y+h)
&amp;&amp; mouse_check_button_released(mb_left){
    click+=30
    if click&gt;30{
        view_xview[0]=x+(w/2)-(1280/2)
        view_yview[0]=y+(h/2)-(720/2)
        objControl.zoom_w=1280
        objControl.zoom_h=720
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete

if click2&gt;0{
    click2--
}
if scr_hover(x,y,x+w,y+h)
&amp;&amp; mouse_check_button_released(mb_right){
    click2+=30
    if click2&gt;30{
        instance_destroy()
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select

if select=0{
    if scr_hover(x,y,x+w,y+h)
    &amp;&amp; mouse_check_button_released(mb_left){
        select=1
        keyboard_string=text
    }
    
}else{
    if !scr_hover(x,y,x+w,y+h)
    &amp;&amp; mouse_check_button_released(mb_left){
        select=0
    }
    
    
    text=keyboard_string
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag

if mouse_check_button_pressed(mb_left)
&amp;&amp; scr_hover(x+3,y+3,x+w-3,y+h-3){
    drag=true
    X=mouse_x
    Y=mouse_y
    X2=mouse_x-x
    Y2=mouse_y-y
    with(objState){
        if id!=other.id{
            drag=false
        }
    }
}

if drag=true{
    if point_distance(X,Y,mouse_x,mouse_y)&gt;15{
        x=mouse_x-X2
        y=mouse_y-Y2
        X=-999999
        Y=-999999
    }
    if mouse_check_button_released(mb_left){
        drag=false
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Connections

if scr_hover(x-range,y+(h/2)-range,x+range,y+(h/2)+range)
&amp;&amp; mouse_check_button_pressed(mb_left){
    cons[0]=true
    if con[0]!=-1{
        with(con[0]){
            for(i=0;i&lt;2;i++){
                if con[i]=other.id{
                    con[i]=-1
                }
            }
        }
        con[0]=-1
    }
}
if scr_hover(x-range+w,y+(h/2)-range,x+range+w,y+(h/2)+range)
&amp;&amp; mouse_check_button_pressed(mb_left){
    cons[1]=true
    if con[1]!=-1{
        with(con[1]){
            for(i=0;i&lt;2;i++){
                if con[i]=other.id{
                    con[i]=-1
                }
            }
        }
        con[1]=-1
    }
}

for(i=0;i&lt;2;i++){
    if cons[i]=true{
        
        //check for connection points
        with(objState){
            if id!=other.id{
                for(a=0;a&lt;2;a++){
                    xx=0 yy=0
                    switch(a){
                        case 0:
                            xx=x
                            yy=y+(h/2)
                        break;
                        case 1:
                            xx=x+w
                            yy=y+(h/2)
                        break;
                    }
                    if scr_hover(xx-range,yy-range,xx+range,yy+range)
                    &amp;&amp; mouse_check_button_released(mb_left){
                        con[a]=other.id
                        cone[a]=other.i
                        other.con[other.i]=id
                        other.cone[other.i]=a
                    }
                }
            }
        }
        
        if mouse_check_button_released(mb_left){
            cons[i]=false
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scr_draw_box(x,y,x+w,y+h)

draw_set_alpha(1)
draw_set_color(c_white)
draw_circle(x,y+(h/2),3,false)
//draw_circle(x+w,y+(h/2),3,false)

var str=text;
if select=1{
    str+="|"
}

draw_set_halign(fa_left)
draw_set_color(c_black)
draw_text_ext(x+5+2,y+5,str,15,w-10)
draw_set_color(c_white)
draw_text_ext(x+5,y+5,str,15,w-10)
h2=string_height_ext(str,15,w-10)

draw_set_color(c_white)
for(i=0;i&lt;15;i++){
    
    if con[i]!=-1{
        if !instance_exists(con[i]){
            con[i]=-1
            break
        }
        
        xx=0 yy=0 xx2=0 yy2=0
        switch(i){
            case 0:
                xx=x
                yy=y+(h/2)
            break;
            case 1:
                xx=x+w
                yy=y+5+h2
            break;
            case 2:
                xx=x+w
                yy=y+5+h2
            break;
        }
        switch(cone[i]){
            case 0:
                xx2=con[i].x
                yy2=con[i].y+(con[i].h/2)
            break;
            case 1:
                xx2=con[i].x+con[i].w
                yy2=con[i].y+(con[i].h/2)
            break;
        }
        
        draw_line_width(xx,yy,xx2,yy2,2)
        
        /*
        if cone[i]=0{
            draw_line_width(x,y+(h/2),con[i].x,con[i].y+(con[i].h/2),2)
        }else{
            draw_line_width(x,y+(h/2),con[i].x+con[i].w,con[i].y+(con[i].h/2),2)
        }
        */
    
    }
}

if cons[0]=true{
    draw_line_width(x,y+(h/2),mouse_x,mouse_y,2)
}
if cons[1]=true{
    draw_line_width(x+w,y+(h/2),mouse_x,mouse_y,2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
