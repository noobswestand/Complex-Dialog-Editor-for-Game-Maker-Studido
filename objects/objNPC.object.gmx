<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>saveFile=""
click2=0

showText=true
showText2=true

//Setup the variables to hold the NPC lines
on0=0
on1=0
for(i=0;i&lt;255;i++){
    for(a=0;a&lt;50;a++){
        line[i,a]=""//text
        op0[i,a]=-1//ds_list
        op1[i,a]=-1//ds_list
    }
}


draw=true



//checkList
checkAmount=0;
for(i=0;i&lt;100;i++){
    checkQuest[i]=-1
    checkON[i]=-1
    checkText0[i]=-1
    checkText1[i]=-1
}

//lbl + goto
lblAmount=0;
for(i=0;i&lt;100;i++){
    lbl[i]=-1
    lblText0[i]=-1
    lblText1[i]=-1
}



dialogueTextOn=0;        //typewriter effect

textSpeed=1               //speed at which text typwriter effect goes. Change be changed with [speed=x] tags
textWaveA=0               //Wave amplitude. example:[waveA=5]
textWaveF=0               //Wave frequency. example:[waveF=1]
textWaveO=0               //Wave offset per character. example:[waveO=1]
textShakeX=0              //Shake amount in X direction. example:[shakeX=3]
textShakeY=0              //Shake amount in Y direction. example:[shakeY=2]
textShake=0               //Shake amount in both X+Y.    example:[shake=4]
textHSV=0                 //Rate at which the color shifts example: [hsv=0.1]

textHSV1=0                 //current hsv shift value
_time=0                  //Used as an internal clock for the wave, and shake effects



//Default values for text effects
defaultMap=ds_map_create()
ds_map_add(defaultMap,"textSpeed",1)
ds_map_add(defaultMap,"textColor","white")
ds_map_add(defaultMap,"textAlpha",1)
ds_map_add(defaultMap,"textFont","fnt_default")

ds_map_add(defaultMap,"textWaveA",0)
ds_map_add(defaultMap,"textWaveF",0)
ds_map_add(defaultMap,"textWaveO",0)
ds_map_add(defaultMap,"textShakeX",0)
ds_map_add(defaultMap,"textShakeY",0)
ds_map_add(defaultMap,"textShake",0)
ds_map_add(defaultMap,"textHSV",0)


defaultColor=c_black
defaultFont=fnt_chat
defaultAlpha=1

chatMap=ds_map_create() //Map used for [var=xxx] tag!

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if file_exists("temp.txt"){
    file_delete("temp.txt")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clock
_time++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if draw=false{exit}


if showText2=false{
    instance_destroy()
}

if keyboard_check_released(vk_escape){
    instance_destroy()
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unselect Nodes
if instance_exists(objNode){
    with(objNode){
        select=false
        for(var i=0;i&lt;15;i++){
            selectS[i]=0
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Quests
if showText=false{
    for(i=0;i&lt;checkAmount;i++){
        if objControl.quest[checkQuest[i]]=checkON[i]{
            on0=checkText0[i]
            on1=checkText1[i]
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load
//show_message(saveFile)
if load_npcChat(saveFile)=0{
    show_message("Failed to load NPC!")
    instance_destroy()
}

if !is_undefined(ds_map_find_value(defaultMap,"textSpeed")){
    textSpeed=ds_map_find_value(defaultMap,"textSpeed")
}
if !is_undefined(ds_map_find_value(defaultMap,"textColor")){
    defaultColor=string_to_color(ds_map_find_value(defaultMap,"textColor"))
}
if !is_undefined(ds_map_find_value(defaultMap,"textFont")){
    defaultFont=asset_get_index(ds_map_find_value(defaultMap,"textFont"))
}
if !is_undefined(ds_map_find_value(defaultMap,"textAlpha")){
    defaultAlpha=ds_map_find_value(defaultMap,"textAlpha")
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///textBox


if draw=false{exit}


//debug
draw_set_alpha(1)
draw_set_halign(fa_left)
draw_text_shadow(5,global.gui_height-50,"Press ESC to stop testing")



//draw the TextBox
    var xx,yy,ww,hh;
    xx=5 yy=global.gui_height-400  ww=350 hh=150
    //Fancy outlines
    draw_set_alpha(1)
    draw_set_font(fnt_chat)
    draw_set_alpha(0.8)
    draw_set_color(c_dkgray)
    draw_rectangle(xx,yy,xx+ww,yy+hh,false)
    draw_set_alpha(1)
    draw_set_color(c_black)
    draw_rectangle(xx,yy,xx+ww,yy+hh,true)
    
    
    if click2&gt;0{
        click2--
    }
    if scr_GUIhover(xx,yy,xx+ww,yy+hh)
    &amp;&amp; mouse_check_button_released(mb_right){
        click2+=30
        if click2&gt;30{
            instance_destroy()
        }
    }

    
    //Draw the Main Line
    //Get the text from the line(on0,on1) and remove all the scripts attached to it
    var str="";
    var p=string_pos("|",line[on0,on1]);//get rid of the commands
    if p=0{
        str=line[on0,on1]
    }else{
        str=string_copy(line[on0,on1],1,p-1)
    }
    
    if dialogueTextOn&lt;string_length(str){
        dialogueTextOn+=textSpeed
        
        //find end of tags-- so it doesn't temporarily display something like,
            //"[spee..." while doing the typewriter effect
        if string_copy(str,dialogueTextOn-1,1)=="["{
            while(string_copy(str,dialogueTextOn-1,1)!="]"
                &amp;&amp; !(dialogueTextOn&gt;string_length(str))){
                dialogueTextOn++
            }
        }
        
    }
    
    //dialogueTextOn=string_length(str)//used to not have the type writer effect
    var str=string_copy(str,1,dialogueTextOn);
    
    
    /*
    //Add blank characters to keep words whole when going to the next line
    var str2=string_copy(str,1,dialogueTextOn);
    var s=string_delete(str,1,dialogueTextOn);
    if string_pos(" ",s)!=0{
        //repeat(string_pos(" ",s)-1){str2+=chr(8192)}
        str2+=string_copy(s,1,string_pos(" ",s)-1)
    }else{
        //repeat(string_length(s)){str2+=chr(8192)}
        str2+=s
    }
    str=str2
    */
    
    
    
    //Checks for BB box commands-- do not use BB text drawing for higher performance
    if 1==1/*string_count("[",str)*/{
        //Draw the Main Lines
        if p=0{
            //Draws the line without any scripts
            draw_text_bb_ext_black_centered(xx+(ww/2)+1,yy+16,str,25,ww-5)
            draw_set_color( c_white );
            draw_text_bb_ext_centered(xx+(ww/2),yy+15,str,25,ww-5)
        }else{
            //Draws the line with scripts
            draw_text_bb_ext_black_centered(xx+(ww/2)+1,yy+16,string_copy(str,1,p-1),25,ww-5)
            draw_set_color( c_white );
            draw_text_bb_ext_centered(xx+(ww/2),yy+15,string_copy(str,1,p-1),25,ww-5)
        }
    }else{
        draw_set_halign(fa_center);
        draw_set_color( c_black );
        draw_set_font( defaultFont );
        draw_set_alpha( defaultAlpha );
        if p=0{
            //Draws the line without any scripts
            draw_text_ext(xx+(ww/2)+1,yy+16,str,25,ww-5)
            draw_set_color( defaultColor );
            draw_text_ext(xx+(ww/2),yy+15,str,25,ww-5)
        }else{
            //Draws the line with scripts
            draw_text_ext(xx+(ww/2)+1,yy+16,string_copy(str,1,p-1),25,ww-5)
            draw_set_color( defaultColor );
            draw_text_ext(xx+(ww/2),yy+15,string_copy(str,1,p-1),25,ww-5)
        }
    }
    
    
    draw_set_halign(fa_center)
    
    
    draw_set_halign(fa_center)
    //draw options
    if ds_exists(op0[on0,on1],ds_type_list) &amp;&amp; ds_list_size(op0[on0,on1])&gt;0{
        var _yy=yy+(string_height_ext(line[on0,on1],25,ww-xx)+30);
        
        for(i=0;i&lt;ds_list_size(op0[on0,on1]);i++){
            if !scr_GUIhover(xx+5,_yy,xx+ww-5,_yy+19){
                draw_text_shadow_color(xx+(ww/2),_yy,
                ds_list_find_value(op0[on0,on1],i),merge_color(c_blue,c_aqua,0.5))
            }else{
                if mouse_check_button(mb_left){
                    draw_text_shadow_color(xx+(ww/2),_yy,ds_list_find_value(op0[on0,on1],i),c_white)
                }else{
                    draw_text_shadow_color(xx+(ww/2),_yy,ds_list_find_value(op0[on0,on1],i),c_ltgray)
                }
                
                if mouse_check_button_released(mb_left){
                    scrNPCCDialogOption(i)
                    dialogueTextOn=0//reset the typewriter effect
                    break;
                }
            }
            _yy+=20
        }
        
    }else{
        //draw the Continue button
        if !scr_GUIhover(xx+5,yy+hh-25,xx+ww-5,yy+hh){
            draw_text_shadow_color(xx+(ww/2),yy+hh-20,"Click here to continue",merge_color(c_blue,c_aqua,0.5))
        }else{
            if mouse_check_button(mb_left){
                draw_text_shadow_color(xx+(ww/2),yy+hh-20,"Click here to continue",c_white)
            }else{
                draw_text_shadow_color(xx+(ww/2),yy+hh-20,"Click here to continue",c_ltgray)
            }
            if mouse_check_button_released(mb_left){
                scrNPCDialogContinue()
                dialogueTextOn=0//reset the typewriter effect
            }
        }
    }
    


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
