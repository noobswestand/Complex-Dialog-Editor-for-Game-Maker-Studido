<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
w=0
h=0
name=""
name2=""
select0=0
select1=0
pid=-1

h2=25

connect=-1

create=1


drag=false
X=0
Y=0
X2=0
Y2=0
xdiff=0
ydiff=0

pinNodeConvo=-1

saved=false


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NewText

strPos0=0
strPos1=0

backDelay=0
arrowDelay=0
clickDelay=-1
clickDelayO=-1

blink=0

alarm[1]=room_speed/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blink
alarm[1]=room_speed/2
blink=!blink
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BackUp

if connect!=-1 &amp;&amp; !instance_exists(connect){instance_activate_object(connect)}

//Check to see if the two connections to the nodes still are in the convo
if connect!=-1 &amp;&amp; instance_exists(connect){
    if connect.convo!=id{
        connect=-1
    }
}


//If everything is cut off - try to find something!
if (connect=-1 || !instance_exists(connect)){
    with(objNode){
        if convo!=-1 &amp;&amp; convo=other.id{
            other.connect=id
            break
        }
    }
    //If it can't find anything - delete
    if connect=-1{
        instance_destroy()
    }
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Re-adjust w,h
if !instance_exists(connect){instance_activate_object(connect)}


if connect!=-1 &amp;&amp; instance_exists(connect) &amp;&amp; instance_exists(objNode)
&amp;&amp; (global.dragNode=true || create=1){
    create=0
    
    
    instance_activate_all();
    with(objNode){saved=false}
    x=getMinXConvo(connect)-50
    with(objNode){saved=false}
    y=getMinYConvo(connect)-50
    
    
    with(objNode){saved=false}
    w=getMaxXConvo(connect)+50
    with(objNode){saved=false}
    h=getMaxYConvo(connect)+50
    
    
    //show_message(string(x)+","+string(y))
    //show_message(string(w)+","+string(h))
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drag


if scr_hover(x,y,w-12,y+h2)
&amp;&amp; mouse_check_button_pressed(mb_left)
&amp;&amp; global.dragNode=false
/*&amp;&amp; select0==false &amp;&amp; select1==false*/{
    global.dragNode=true
    drag=true
    global.createPopDisplay=false
    
    X=mouse_x
    Y=mouse_y
    X2=mouse_x-x
    Y2=mouse_y-y
    with(object_index){
        if id!=other.id{
            drag=false
        }
    }
}

if drag=true{
    if point_distance(X,Y,mouse_x,mouse_y)&gt;15{
        var xx,yy;
        xx=x yy=y
        x=mouse_x-X2
        y=mouse_y-Y2
        X=-999999
        Y=-999999
        if xx!=x || yy!=y{
            xdiff=xx-x
            ydiff=yy-y
            //redo x,y of nodes
            instance_activate_all()
            with(objNode){
                if convo=other.id{
                    x-=other.xdiff
                    y-=other.ydiff
                    for(var i=0;i&lt;15;i++){
                        if path_exists(path[i]){
                            path_shift(path[i],-other.xdiff,-other.ydiff)
                        }
                    }
                }
            }
        }
    }
    if mouse_check_button_released(mb_left){
        drag=false
        global.dragNode=false
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text

var xx,yy,ww,hh;
xx=x yy=y
ww=w hh=h

if xx&lt;view_xview &amp;&amp; xx+ww&gt;view_xview{
    xx=clamp(xx,view_xview,view_xview+view_wview)
}
if yy&lt;view_yview+25 &amp;&amp; yy+hh&gt;view_yview{
    yy=clamp(yy,view_yview+25,view_yview+view_hview)
}



if scr_hover(xx,yy,150+xx,yy+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select0=1
    global.createPopDisplay=false
}
if !scr_hover(xx,yy,150+xx,yy+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select0=0
    keyboard_string=""
}

xx+=175
if scr_hover(xx,yy,150+xx,yy+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select1=1
    global.createPopDisplay=false
}
if !scr_hover(xx,yy,150+xx,yy+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select1=0
    keyboard_string=""
}


if select1=1{
    name2=string_digits(name2)
    while(string_length(name2)&gt;5){
        name2=string_delete(name2,string_length(name2),1)
    }
}
if select0=1{
    name=string_digits(name)
    while(string_length(name)&gt;5){
        name=string_delete(name,string_length(name),1)
    }
}


//Tabbing
if keyboard_check_released(vk_tab){
    if select0==1{
        select0=0
        select1=1
    }else if select1==1{
        select0=1
        select1=0
    }
}

/*
var xx=0;
if scr_hover(x+xx,y,x+150+xx,y+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select0=1
    keyboard_string=name
    global.createPopDisplay=false
}
if !scr_hover(x+xx,y,x+150+xx,y+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select0=0
    keyboard_string=""
}


if select0=1{
    name=string_digits(keyboard_string)
    while(string_length(name)&gt;5){
        name=string_delete(name,string_length(name),1)
    }
    keyboard_string=name
}

xx+=175
if scr_hover(x+xx,y,x+150+xx,y+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select1=1
    keyboard_string=name2
    global.createPopDisplay=false
}
if !scr_hover(x+xx,y,x+150+xx,y+h2)
&amp;&amp; mouse_check_button_released(mb_left){
    select1=0
    keyboard_string=""
}


if select1=1{
    name2=string_digits(keyboard_string)
    while(string_length(name2)&gt;5){
        name2=string_delete(name2,string_length(name2),1)
    }
    keyboard_string=name2
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///drawName

var xx,yy,ww,hh;
xx=x yy=y
ww=w hh=h
if xx&lt;view_xview &amp;&amp; xx+ww&gt;view_xview{
    xx=clamp(xx,view_xview,view_xview+view_wview)
}
if yy&lt;view_yview+25 &amp;&amp; yy+hh&gt;view_yview{
    yy=clamp(yy,view_yview+25,view_yview+view_hview)
}

draw_set_alpha(1)
draw_set_color(c_dkgray)
draw_rectangle(xx+2,yy+2,xx+75+250,yy+h2-1,false)


draw_set_halign(fa_left)
draw_set_font(fnt_default)
var xxx=0;
if select0==false{
    draw_text_shadow(xx+75+xxx+3,yy+4,name)
}else{
    draw_set_color(c_white)
    name=scr_textBox3(name,xx+75+xxx+3,yy-1,ww-(xx+75+xxx+3),hh-(yy),0)
}

draw_text_shadow(xx+4+xxx,yy+4,"QuestID: ")
draw_set_color(c_ltgray)
draw_rectangle(xx+75+xxx,yy+2,xx+150+xxx,yy+h2-2,true)

xxx+=175
if select1==false{
    draw_text_shadow(xx+75+xxx+3,yy+4,name2)
}else{
    draw_set_color(c_white)
    name2=scr_textBox3(name2,xx+75+xxx+3,yy-1,ww-(xx+75+xxx+3),hh-(yy),0)
}
draw_text_shadow(xx+4+xxx-5,yy+4,"QuestON: ")
draw_set_color(c_ltgray)
draw_rectangle(xx+75+xxx,yy+2,xx+150+xxx,yy+h2-2,true)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message(1)

var xx,yy,ww,hh;
xx=x yy=y
ww=w hh=h
if xx&lt;view_xview &amp;&amp; xx+ww&gt;view_xview{
    xx=clamp(xx,view_xview,view_xview+view_wview)
}
if yy&lt;view_yview+25 &amp;&amp; yy+hh&gt;view_yview{
    yy=clamp(yy,view_yview+25,view_yview+view_hview)
}


draw_set_alpha(1)
draw_set_color(c_dkgray)
draw_rectangle(round(xx),round(yy),round(ww),round(hh),false)
draw_set_color(c_ltgray)
draw_rectangle(round(xx),round(yy),round(ww),round(hh),true)

//drawExit
draw_rectangle(round(ww)-h2-4,yy+2,round(ww)-2,yy+h2-2,true)
draw_sprite_ext(sprExit,0,lerp(round(ww)-h2-4,round(ww)-2,0.5)+1,
lerp(yy+2,yy+h2-4,0.5)+2,1,1,0,c_white,1)

if scr_hover(round(ww)-h2-4,yy+2,round(ww)-2,yy+h2-2)
&amp;&amp; mouse_check_button_released(mb_left){
    instance_destroy()
    global.createPopDisplay=false
    instance_activate_all()
    with(objNode){
        if convo=other.id{
            convo=-1
        }
    }
}


//drawDrag
draw_line(xx,yy+h2,ww,yy+h2)



draw_set_halign(fa_left)
draw_set_font(fnt_default)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug

draw_set_alpha(1)
draw_set_color(c_white)
//draw_text(x,y-25,string(connect)+"   "+string(instance_exists(connect)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
